#include <bits/stdc++.h>
using namespace std;
#define lli long long int
lli n, m,d,s;
char a[100000];
int begin_play[100000][3];
int end_play[100000][3];
int main()
{
    ios_base::sync_with_stdio(false);
    ifstream fin("billboard.in");
    ofstream fout("billboard.out");
    cin.tie(NULL);
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    int rock = 0, paper = 0, scissors = 0;
    for(int i=0;i<n;i++){
        if(a[i] == 'H') rock++;
        if(a[i]=='P')paper++;
        if(a[i]=='S')scissors++;
        begin_play[i][0] = rock;
        begin_play[i][1] = paper;
        begin_play[i][2] =scissors;
    }
    rock = paper = scissors = 0;
    for(int i=n-1;i>=0;i--){
        if(a[i] == 'H') rock++;
        if(a[i]=='P')paper++;
        if(a[i]=='S')scissors++;
        end_play[i][0] = rock;
        end_play[i][1] = paper;
        end_play[i][2] =scissors;
    }
    int curr = 0;
    int ans;
    for(int j  =0;j<3;j++){
        curr = max(curr, end_play[0][j]);
    }
    ans = curr;
    int curr_left = 0;
    for(int i=0;i<n -1;i++){ ///treat last case seperately and beginning seperately
        curr_left  =0;
        curr = 0;
        for(int j  =0;j<3;j++){
            curr = max(curr, end_play[i+1][j]);
        }
        for(int j = 0;j<3;j++){
            curr_left  =max(curr_left, begin_play[i][j]);
        }
        ans = max(ans, curr+ curr_left);
    }
    curr = 0;
    for(int j  =0;j<3;j++){
        curr  =max(curr, begin_play[n-1][j]);
    }
    ans  =max(ans, curr);
    cout<<ans<<endl;



}
