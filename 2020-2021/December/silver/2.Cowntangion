
#include <bits/stdc++.h>
int n;
using namespace std;
#define MAXN 100001;
int ans = 0;
int visited[100001]  ={0};
vector<int> adj[100001];
void bfs(int pos)
{
    queue<pair<int,int>> q;
    q.push({pos, 0});
    visited[pos]++;
    while(!q.empty())
    {
        pair<int,int> v  =q.front();
        q.pop();
        visited[v.first]++;
        int tcont  =0;
        for(int e : adj[v.first])
        {
            if(visited[e] == 0){
                tcont++;
            }
        }
        ans+=tcont;
        if(tcont ==0)continue;
        //cout<<"CEiL"<<ceil(log2(tcont))<<endl;
        else ans+=ceil(log2(tcont+1));
        for(int e :adj[v.first]){
            if(visited[e] == 0) q.push({e, v.second+1});
        }

    }
}
int main()
{
   cin>>n;
   for(int i  =0;i<n-1;i++){
     int a, b;
     cin>>a>>b;
     adj[a].push_back(b);
     adj[b].push_back(a);
   }
   int mc= 0;
   int loc =0;
   for(int i  =1;i<=n;i++){
      if(adj[i].size() > mc){
        loc =i;
        mc = max(mc, (int)adj[i].size());  
      }
   }
   bfs(loc);
   cout<<ans<<endl;
}
