#include <bits/stdc++.h>
int n;
using namespace std;
struct stuff{
    int x;
    int y;
    int i;
};
bool cmp(stuff a, stuff b)
{
    return a.y<b.y;
}
bool cmp2(stuff a, stuff b)
{
    return a.x<b.x;
}
    vector<int> cows[1001];
int sum(int pos)
{
    int total =0;
    for(int it: cows[pos]){
        if(cows[it].size() == 0)total++;
        else total+= 1+sum(it);
    }
    return total;
}
int main()
{
    cin>>n;
    vector<stuff> e;
    vector<stuff> no;
    for(int i  =0;i<n;i++){
        char d;
        int x, y;
        cin>>d>>x>>y;
        stuff temp;
        temp.x = x; temp.y = y; temp.i = i;
        if(d == 'E') e.push_back(temp);
        else no.push_back(temp);
    }
    sort(e.begin(), e.end(), cmp);
    sort(no.begin(), no.end(), cmp2);
    for(auto it: e)
    {
        for(int i  =0;i<no.size();i++){
            if(no[i].y > it.y) continue;
            if(no[i].x < it.x) continue;
            int t = no[i].x - it.x;
            int ny = no[i].y  +t;
            if(ny == it.y)continue;   /// if they touch at the same time, continue
            if(ny > it.y) {   /// n line blocked blocked it
                cows[no[i].i].push_back(it.i);   ///no push what it blocked
                break;
            }
            else {    ///it blocked ny
                cows[it.i].push_back(no[i].i);
                no.erase(no.begin()  +i);
                i--;
            }
        }
    }
    for(int i  =0;i<n;i++){
        cout<<sum(i)<<endl;;
    }


}
