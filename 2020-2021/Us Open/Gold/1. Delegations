#include <bits/stdc++.h>
using namespace std;
#define lli long long int
#define f first
#define s second
#define pb push_back
#define MAXN 200001
#define INF 2000000000
#define mod 1000000007
#define loop(i, a,b) for  (int i=(a); i<= (signed)(b); i++)
#define lp(i,a) for(int i = 0;i<(signed)(a); i++)

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pair<int,int>> vpii;
int n;
int a[MAXN];
int lastloc[MAXN];
int main() {
  cin>>n;
  loop(i,1, n) cin>>a[i];
  map<int, int>prev;
  loop(i,1,n){
    if(prev.find(a[i]) == prev.end()){
        lastloc[i] = 0;
        prev.insert({a[i], i});
    }
    else{
        auto it  =prev.find(a[i]);
        lastloc[i] = it->second;
        it->second = i;
    }
  }
  //loop(i,1, n)cout<<lastloc[i]<<endl;
  ordered_set oset;
  lli ans = 0;
  loop(i,1, n){
    ans+= oset.size()  - oset.order_of_key(lastloc[i]+1);
    auto it = oset.find(lastloc[i]);
    if(it != oset.end())oset.erase(it);
    //cout<<oset.size()<< "  "<<oset.order_of_key(lastloc[i]+1)<<" "<<oset.size()  - oset.order_of_key(lastloc[i]+1)<<endl;
    oset.insert(i);
  }
  cout<<ans<<endl;
}
